<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
        <property name="jdbcUrl" value="jdbc:oracle:thin:@nextit.or.kr:1521:xe"/>
        <property name="username" value="std225"/>
        <property name="password" value="oracle21c"/>
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:mappers/*.xml"/>
        <!--
        typeAliasesPackage: value에 등록된 패키지 안의 모든 DTO(VO) 클래스를
        자동으로 alias를 사용할 수 있도록 세팅
        예) board.BoardDTO => boardDTO로 alias가 자동 적용된다.
        comment.CommentDTO => commentDTO로 alias가 자동 적용
        kr.or.nextit.springmvc.StudentNameDTO => studentNameDTO로 alias가 적용됨
         -->
        <property name="typeAliasesPackage" value="kr.or.nextit.springmvc"/>
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
    </bean>
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>
    <!-- 서비스 빈 등록 -->
    <context:component-scan base-package="kr.or.nextit.springmvc">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- base-package에 존재하는 모든 Mapper 인터페이스를 스프링 빈으로 등록 -->
    <mybatis-spring:scan base-package="kr.or.nextit.springmvc"/>

    <!-- 트랜잭션을 관리하는 객체 등록 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--
     다음을 설정하면 복잡한 aop 세팅을 자동으로 해준다.
      annotation을 붙여서 해당 메소드가 실행될 때 트랜잭션이 동작하도록 세팅한다.
    -->
    <tx:annotation-driven/>
</beans>